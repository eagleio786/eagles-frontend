"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_ClientProvider_tsx",{

/***/ "(app-pages-browser)/./store/watchAddress.ts":
/*!*******************************!*\
  !*** ./store/watchAddress.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _userCounterStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userCounterStore */ \"(app-pages-browser)/./store/userCounterStore.ts\");\n/* harmony import */ var _config_exports__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/config/exports */ \"(app-pages-browser)/./config/exports.ts\");\n/* harmony import */ var _config_Method__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/config/Method */ \"(app-pages-browser)/./config/Method.ts\");\n// watchAddress.ts\n\n\n\n\n\n\n// ✅ Corrected subscribe\nconst unsub = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.subscribe((state)=>state.address, (address, prevAddress)=>{\n    if (address && address !== prevAddress) {\n        console.log(\"Address changed (global watcher):\", address);\n        profilefun();\n        UplinerId();\n        getEveryLevelData();\n        getEveryLevelDataX2();\n        getDashStats();\n    }\n}, {\n    fireImmediately: true\n});\nconst profilefun = async ()=>{\n    console.log(\"profile function is running\");\n    const currentAddress = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.getState().address;\n    const defaultProfile = {\n        id: \"\",\n        name: \"name\",\n        profileImage: \"\",\n        description: \"description\",\n        email: \"email@example.com\",\n        walletAddress: \"wallet_address\",\n        socialLinks: {\n            facebook: \"\",\n            youtube: \"\",\n            instagram: \"\",\n            twitter: \"\",\n            whatsapp: \"\"\n        }\n    };\n    try {\n        var _response_data;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(\"\".concat(_config_exports__WEBPACK_IMPORTED_MODULE_1__.ApiUrl, \"/user/profile/\").concat(currentAddress));\n        const profileData = (_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.data;\n        if (profileData) {\n            _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useProfileStore.getState().setProfile(profileData);\n            console.log(\"✅ Profile updated:\", profileData);\n        } else {\n            console.warn(\"⚠️ No profile data found in response.\");\n        }\n    } catch (error) {\n        console.error(\"❌ Error while getting profile:\", error);\n        _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useProfileStore.getState().setProfile(defaultProfile);\n    }\n};\nconst UplinerId = async ()=>{\n    const currentAddress = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.getState().address;\n    console.log(\"upliner id is \");\n    const setUplinerId = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useUplinerStore.getState().setUplinerId; // ✅ CORRECT\n    const SetUserId = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useUserId.getState().setUserId; // ✅ CORRECT\n    const setX1 = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useUserLevels.getState().setLvlX1;\n    const setX2 = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useUserLevels.getState().setLvlX2;\n    const setX3 = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useUserLevels.getState().setLvlX3;\n    const setTotalProfit = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().setTotalProfit;\n    const setTotalpartners = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().setpartners;\n    const setTotalTeam = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().setteam;\n    const sethr24Totalpartners = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().sethr24partners;\n    const sethr24TotalTeam = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().sethr24team;\n    try {\n        let val = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.users)(currentAddress);\n        SetUserId(Number(val[1]).toString());\n        setX1(Number(val[2]));\n        setX2(Number(val[3]));\n        let val2 = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.users)(val[0]);\n        let X3val = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.X3Users)(currentAddress);\n        let Kashif = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.getPartners)(currentAddress);\n        setX3(Number(X3val[2]));\n        let profit = Number(val[4]) + Number(X3val[3]);\n        let partner = Number(Kashif);\n        let fun18 = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.getTotalTeamCount)(currentAddress);\n        let par = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.get24HourDirects)(currentAddress);\n        let par24 = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.X3get24HourDirects)(currentAddress);\n        let tea = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.get24HourTeamCount)(currentAddress);\n        let X3tea = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.X3get24HourTeamCount)(currentAddress);\n        let partner24hr = Number(par) + Number(par24);\n        let team24hr = Number(tea) + Number(X3tea);\n        if (currentAddress === \"0x31eaCE9383eE97A5cF2FD6A1B254F27683DedE1B\") {\n            let team = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.lastUserid)();\n            console.log(\"bakwas in if condition\", team);\n            setTotalTeam(Number(team));\n            setTotalProfit(profit + 25418);\n            setTotalpartners(partner + 1289);\n        } else {\n            let team = Number(Kashif) + Number(fun18);\n            console.log(\"bakwas in else condition\", team);\n            setTotalTeam(team);\n            setTotalProfit(profit);\n            setTotalpartners(partner);\n        }\n        sethr24TotalTeam(team24hr);\n        sethr24Totalpartners(partner24hr);\n        setTotalProfit(profit);\n        console.log(\"upliner id is \", val2);\n        setUplinerId(Number(val2[1]).toString());\n    } catch (error) {\n        console.log(\"error while getting users data\", error);\n    }\n};\nconst setLevels = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useX1LevelStore.getState().setLevels; // ✅ FIXED\nconst levels = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useX1LevelStore.getState().levels;\nconst getEveryLevelData = async ()=>{\n    const currentAddress = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.getState().address;\n    try {\n        const updatedLevels = await Promise.all(levels.map(async (lvl)=>{\n            try {\n                console.log(\"response\", currentAddress);\n                const response = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.getSlotFilled)(currentAddress, \"1\", lvl.level.toString());\n                console.log(\"response\", response);\n                const boolres = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.isLocked)(currentAddress, \"1\", lvl.level.toString());\n                console.log(\"kas\", boolres);\n                return {\n                    ...lvl,\n                    slots: [\n                        Number(response[0]),\n                        lvl.slots[1]\n                    ],\n                    recycleCount: Number(response[1]),\n                    maxUsers: Number(response[0]) + Number(response[1]) * 4,\n                    locked: boolres\n                };\n            } catch (err) {\n                console.error(\"Error fetching level \".concat(lvl.level, \":\"), err);\n                return lvl;\n            }\n        }));\n        setLevels(updatedLevels);\n    } catch (error) {\n        console.log(\"Error while getting slots:\", error);\n    }\n};\nconst setLevelsX2 = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useX2LevelStore.getState().setLevels; // ✅ FIXED\nconst levelsX2 = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useX2LevelStore.getState().levels;\nconst getEveryLevelDataX2 = async ()=>{\n    const currentAddress = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.getState().address;\n    try {\n        const updatedLevels = await Promise.all(levelsX2.map(async (lvl)=>{\n            try {\n                console.log(\"response\", currentAddress);\n                const response = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.getSlotFilled)(currentAddress, \"2\", lvl.level.toString());\n                console.log(\"response\", response);\n                const boolres = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.isLocked)(currentAddress, \"2\", lvl.level.toString());\n                console.log(\"kas\", boolres);\n                return {\n                    ...lvl,\n                    slots: [\n                        Number(response[0]),\n                        lvl.slots[1]\n                    ],\n                    recycleCount: Number(response[1]),\n                    maxUsers: Number(response[0]) + Number(response[1]) * 4,\n                    locked: boolres\n                };\n            } catch (err) {\n                console.error(\"Error fetching level \".concat(lvl.level, \":\"), err);\n                return lvl;\n            }\n        }));\n        setLevelsX2(updatedLevels);\n    } catch (error) {\n        console.log(\"Error while getting slots:\", error);\n    }\n};\nconst getDashStats = async ()=>{\n    const currentAddress = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.useAdressStore.getState().address;\n    const sethr24ProfitProfit = _userCounterStore__WEBPACK_IMPORTED_MODULE_0__.dashboardStatsStore.getState().sethr24ProfitProfit;\n    try {\n        let val = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.get24HourPayment)(currentAddress);\n        let valX3 = await (0,_config_Method__WEBPACK_IMPORTED_MODULE_2__.X3get24HourPayment)(currentAddress);\n        let final = Number(val) + Number(valX3);\n        console.log(\"zzz\", final / _config_exports__WEBPACK_IMPORTED_MODULE_1__.usdtdecimals);\n        sethr24ProfitProfit(final / _config_exports__WEBPACK_IMPORTED_MODULE_1__.usdtdecimals);\n    } catch (error) {\n        console.log(\"error while getting stats\", error);\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (unsub);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/watchAddress.ts\n"));

/***/ })

});